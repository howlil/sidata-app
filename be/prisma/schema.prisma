generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  adminId   String   @id @default(cuid())
  nama      String
  email     String @unique
  password  String
  Token     Token[]
  JadwalKonsulProdi JadwalKonsulProdi[]
  Dokumen   Dokumen[]
}

model Token {
  tokenId     String  @id @default(cuid())
  token       String
  mahasiswaId String?
  dosenId     String?
  adminId     String?
  Mahasiswa   Mahasiswa? @relation(fields: [mahasiswaId], references: [idMahasiswa],onDelete: Cascade, onUpdate: Cascade)
  Dosen       Dosen? @relation(fields: [dosenId], references: [idDosen],onDelete: Cascade, onUpdate: Cascade)
  Admin       Admin? @relation(fields: [adminId], references: [adminId],onDelete: Cascade, onUpdate: Cascade)
}

model TA {
  idTA         String    @id @default(cuid())
  idMahasiswa  String    @unique
  ideTA        String
  deskripsiIde  String
  judulTA      String?
  bidangId     String
  statusTA     statusTa
  status       status
  Mahasiswa    Mahasiswa @relation(fields: [idMahasiswa], references: [idMahasiswa],onDelete: Cascade, onUpdate: Cascade)
  Bidang       Bidang @relation(fields: [bidangId], references: [bidangId],onDelete: Cascade, onUpdate: Cascade)
  DosenPembimbingTA DosenPembimbingTA[]
  DaftarTA     DaftarTA[]
}

model DosenPembimbingTA {
  idTA             String
  dosenPembimbingID String
  status         status
  TA               TA @relation(fields: [idTA], references: [idTA], onDelete: Cascade, onUpdate: Cascade)
  DosenPembimbing  DosenPembimbing @relation(fields: [dosenPembimbingID], references: [id], onDelete: Cascade, onUpdate: Cascade)
  @@id([idTA, dosenPembimbingID])
}


model DosenPembimbing {
  id             String @id @default(cuid())
  dosenId        String
  tipePembimbing tipePembimbing
  Dosen          Dosen @relation(fields: [dosenId], references: [idDosen],onDelete: Cascade, onUpdate: Cascade)
  DosenPembimbingTA DosenPembimbingTA[]
  JadwalBimbinganDosen JadwalBimbinganDosen[]
}

model DaftarTA {
  daftarTAId     String  @id @default(cuid())
  idMahasiswa    String  @unique
  idTA           String  @unique
  transkripNilai String
  buktiLulus     String
  buktiKRS       String
  suratTugas     String
  suratIzinKuliah String
  buktiKP        String
  status         status
  Mahasiswa      Mahasiswa @relation(fields: [idMahasiswa], references: [idMahasiswa],onDelete: Cascade, onUpdate: Cascade)
  TA             TA @relation(fields: [idTA], references: [idTA],onDelete: Cascade, onUpdate: Cascade)
}

model Mahasiswa {
  idMahasiswa           String        @id @default(cuid())
  foto                  String?
  nama                  String
  nim                   String
  email                 String @unique
  password              String
  alamat                String
  Token                 Token[]
  TA                    TA?
  DaftarTA              DaftarTA?
  JadwalBimbinganDosen  JadwalBimbinganDosen[]
  JadwalKonsulProdi     JadwalKonsulProdi[]
  Message               Message[]
}

model Dosen {
  idDosen              String        @id @default(cuid())
  nama                 String
  foto                 String?
  kuotaMhdBimbingan    Int?
  nip                  String
  email                String @unique
  password             String
  jabatanId            String
  Token                Token[]
  DosenPembimbing      DosenPembimbing[]
  BidangDosen          BidangDosen[]
  Jabatan              Jabatan @relation(fields: [jabatanId], references: [jabatanId],onDelete: Cascade, onUpdate: Cascade)
}

model Jabatan {
  jabatanId     String  @id @default(cuid())
  namaJabatan   String
  Dosen         Dosen[]
}

model Bidang {
  bidangId      String  @id @default(cuid())
  namaBidang    String
  TA            TA[]
  BidangDosen   BidangDosen[]
}

model BidangDosen {
  bidangId      String
  dosenId       String
  Bidang        Bidang @relation(fields: [bidangId], references: [bidangId],onDelete: Cascade, onUpdate: Cascade)
  Dosen         Dosen @relation(fields: [dosenId], references: [idDosen],onDelete: Cascade, onUpdate: Cascade)
  @@id([bidangId, dosenId])
}

model JadwalBimbinganDosen {
  id                String @id @default(cuid())
  idMahasiswa       String
  kendala           String
  status            status
  progresTA         String
  tanggal           DateTime
  dosPembimbingId   String
  waktuMulai        DateTime
  waktuSelesai      DateTime
  Mahasiswa         Mahasiswa @relation(fields: [idMahasiswa], references: [idMahasiswa],onDelete: Cascade, onUpdate: Cascade)
  DosenPembimbing   DosenPembimbing @relation(fields: [dosPembimbingId], references: [id],onDelete: Cascade, onUpdate: Cascade)
}

model JadwalKonsulProdi {
  id                String @id @default(cuid())
  idMahasiswa       String
  idAdmin           String
  kendala           String
  status            status
  tanggal           DateTime
  waktuMulai        DateTime
  waktuSelesai      DateTime
  Mahasiswa         Mahasiswa @relation(fields: [idMahasiswa], references: [idMahasiswa],onDelete: Cascade, onUpdate: Cascade)
  Admin             Admin @relation(fields: [idAdmin], references: [adminId],onDelete: Cascade, onUpdate: Cascade)
}

model Message {
  messageId      String   @id @default(cuid())
  idMahasiswa    String
  text           String
  isUserMessage  Boolean
  timestamp      DateTime
  Mahasiswa      Mahasiswa @relation(fields: [idMahasiswa], references: [idMahasiswa], onDelete: Cascade, onUpdate: Cascade)
}

model Dokumen {
  dokumenId      String  @id @default(cuid())
  adminId        String
  judulDokumen   String
  Admin          Admin @relation(fields: [adminId], references: [adminId], onDelete: Cascade, onUpdate: Cascade)
}

enum statusTa {
  belumAda
  ide
  judul
  proposal
}

enum status {
  diproses
  ditolak
  disetujui
}

enum tipePembimbing {
  utama
  asisten
}
